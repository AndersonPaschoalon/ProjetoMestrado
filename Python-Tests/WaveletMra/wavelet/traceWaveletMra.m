#!/usr/bin/octave-cli -qf
% traceWaveketMra.m
%
% Licensing:
%
%       This code is distributed under the GNU LGPL license.
%
% Modified:
%
%       26 March 2017
%
% Author:
%
%       Anderson Paschoalon
%
%
% Command line args:
%
%	arg1: 	file with packet arrivals data times, in the directory ./data,
%			generated by the pkt-filter.py. It starts with the prefix 
%			'packetsinfo_'.
%	arg2:	experiment name
%
% Usage:
%
%	./traceWaveletMra.m <packet-data> <experiment name>
%	Exemple: `./traceWaveletMra.m packetsinfo_wombat.csv  wombat`
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Initialization and load data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%inicialization
arg_list = argv ();
close all; clc; clf;
DATA_FILE1 = arg_list{1};
DATA_FILE2 = arg_list{2};
EXPERIMENT_NAME = arg_list{3};
graphics_toolkit ('gnuplot');
set(0, 'DefaultLineLineWidth', 4);
set(0,'defaulttextfontsize', 14);
set(0,'DefaultAxesFontSize',12)
set(0,'DefaultAxesFontName', 'Times New Roman')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Constants
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% plot directory whre the gnuplot data files will be saved
DATA_DIR = './data/';

% gnuplot data extension
DATA_EXT = '.dat';

% path and datafile prefix. file generated by pcap-sniffer.py
% DATAFILE_NAME_PREFIX = './data/';
% DATAFILE_NAME_PREFIX = '../data/packetsinfo_';

%  file extension
DATAFILE_NAME_EXT = '.txt';

% path+file with packet data to be loaded
SIMULATION_DATA1 = strcat(DATA_DIR, DATA_FILE1);
SIMULATION_DATA2 = strcat(DATA_DIR, DATA_FILE2);

% load basic data 
TraceData1 = dlmread(SIMULATION_DATA1, ' ' , 2, 0);
TraceData2 = dlmread(SIMULATION_DATA2, ' ' , 2, 0);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Wavelet multiresolution energy analizis (MREA)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

granularity = 0.01; % 10 ms

vetArrivalTimes1 = TraceData1(:,5);
logEnergy1 = waveletMra(vetArrivalTimes1, granularity);
resolutionLen1 = length(logEnergy1);
res1 = 1:resolutionLen1;

vetArrivalTimes2 = TraceData2(:,5);
logEnergy2 = waveletMra(vetArrivalTimes2, granularity);
resolutionLen2 = length(logEnergy2);
res2 = 1:resolutionLen2;

% regularize sizes to plot
res1 = res1(:);
res2 = res2(:);
logEnergy1 = logEnergy1(:);
logEnergy2 = logEnergy2(:);
min_size = min([length(res1) length(res2) length(logEnergy1) length(logEnergy2)])
res1 = res1(1:min_size);
res2 = res2(1:min_size);
logEnergy1 = logEnergy1(1:min_size);
logEnergy2 = logEnergy2(1:min_size);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Save data 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%WaveletMREA_Data = [res1(:) logEnergy1(:)];
WaveletMREA_Data = [res1 logEnergy1 res2 logEnergy2];
title = 'WaveletMREA';
labels = 'resolution1(x), energy_log1(y), resolution2(x), energy_log2(y)';
filename = strcat(DATA_DIR, title, DATA_EXT);
matrix2File(WaveletMREA_Data, filename, title, labels);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Plot data 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%begin
clf;
hold on; grid on;

%settings
set(gca,'Fontname','Timesnewroman');
set(gca, 'fontsize', 20);
ylabel('log2(Energy(j))');
xlabel('Time scale j');
set(gca, 'fontsize', 18);
set(gca, 'LineWidth', 2);

%plotdata
plot1 = plot(res1, logEnergy1, '-^r');
plot2 = plot(res2, logEnergy2, '-^b');

%legend
legend(EXPERIMENT_NAME, 'Location', 'southoutside', 'Orientation', 'horizontal');

%additional settings
set(plot1, 'LineWidth', 3);
set(plot2, 'LineWidth', 3);

%save plot 
%saveas(gca , '../plots/wavelet-mrea.png');
%save plot 
figure_name = strcat('figures/', EXPERIMENT_NAME, '-', 'WaveletMREA', '.png' );
saveas(gca , figure_name);

%end
hold off; grid off;



#!/usr/bin/octave-cli -qf
% traceBandwidth.m
%
% Licensing:
%
%       This code is distributed under the GNU LGPL license.
%
% Modified:
%
%       26 March 2017
%
% Author:
%
%       Anderson Paschoalon
%
% Command line args:
%
%	arg1: experiment name1
%	arg2: experiment name2
%	arg3: granularity
%
% Usage exampanalysis-e:
% ./analysis-bandwidth.m  packetsinfo_wombat.csv packetsinfo_wombat2.csv 0.1
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Initialization and load data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%inicialization
arg_list = argv ();
close all; clc; clf;
graphics_toolkit ('gnuplot');
set(0, 'DefaultLineLineWidth', 4);
set(0,'defaulttextfontsize', 14);
set(0,'DefaultAxesFontSize',12)
set(0,'DefaultAxesFontName', 'Times New Roman')


DATA_FILE1 = arg_list{1};
DATA_FILE2 = arg_list{2};
GRANULARITY = str2num(arg_list{3});
%EXPERIMENT_NAME1 = arg_list{2};
%EXPERIMENT_NAME2 = arg_list{3};

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Constants
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% plot directory whre the gnuplot data files will be saved
DATA_DIR = './data/';

% gnuplot data extension
PLOT_DATA_EXT = '.csv';

% path and datafile prefix. file generated by pcap-sniffer.py
DATAFILE_NAME_PREFIX = './data/';

%  file extension
%DATAFILE_NAME_EXT = '.txt';

% path+file with packet data to be loaded
SIMULATION_DATA1 = strcat(DATA_DIR, DATA_FILE1);
SIMULATION_DATA2 = strcat(DATA_DIR, DATA_FILE2);

% load basic data 
TraceData1 = dlmread(SIMULATION_DATA1, ' ' , 2, 0);
TraceData2 = dlmread(SIMULATION_DATA2, ' ' , 2, 0);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bandwidth
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
vetDepertureTimes1 = TraceData1(:, 5);
vetPacketSizes1 = TraceData1(:, 3);
vetDepertureTimes2 = TraceData2(:, 5);
vetPacketSizes2 = TraceData2(:, 3);
sample_size = GRANULARITY;
[timeVector1 bandwidthVector1] = calc_bandwidth(vetDepertureTimes1, vetPacketSizes1, sample_size);
[timeVector2 bandwidthVector2] = calc_bandwidth(vetDepertureTimes2, vetPacketSizes2, sample_size);

m = min(timeVector1(end), timeVector2(end));
timeVector1 = regularizeVet(timeVector1, m);
bandwidthVector1 = regularizeVet(bandwidthVector1, m);
bandwidthVector2 = regularizeVet(bandwidthVector2, m);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Save data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Bandwidth_Data = [timeVector1 bandwidthVector1 bandwidthVector2];
title = 'Bandwidth';
labels = 'time(x)(seconds), bitRate1(y)(bits), bitRate2(y)(bits)';
filename = strcat(DATA_DIR, title, PLOT_DATA_EXT);
matrix2File(Bandwidth_Data, filename, title, labels);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Plot
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
scale = 10^6;
clf;
hold on;
grid on;
plot1 = plot(timeVector1,bandwidthVector1/scale, '-r');
plot2 = plot(timeVector1,bandwidthVector2/scale, '-b' );
set(gca, 'fontsize', 20);
set(plot1, 'LineWidth', 1);
set(plot2, 'LineWidth', 1);
set(gca,'Fontname','Timesnewroman');
xlabel('time (seconds)'); 
ylabel('Mbps');
figure_name = strcat('figures/Bandwidth.png' );
saveas(gca, figure_name);
grid off;
hold off;



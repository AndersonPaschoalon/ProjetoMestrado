TODO
>>>>>>>>>>>>>>>>>
- implementar um prototipo em matlab dos algoritimos restantes
- fazer um metodo que calcula tempos de on/off para intersession, e os salva em uma lista
- fazer um método que calcula tempos de on/off para inter-file, e os salvam em duas listas
- fazer um métod0 que seta os tempos de on/off para inter-file
- fazer um metodo que recupera um valor aleatorio... de preferencia com o formato
	time_sec t = netFlow[i]->interFile_On().randVal();
	time_sec t = netFlow[i]->interFile_Off().randVal();
	netFlow[i]->interFileModel_next();
- fazer on metodo
	time_sec t = netFlow[i]->interSession().onOff();
	netFlow[i]->interSession_next();
- modificar o metodo para
	netFlow[i]->interArrival().param1();
	netFlow[i]->interArrival().param2();
	netFlow[i]->interArrival_next();
- Atualizar XML
- Atualizar api do D-ITG
- Rodar em veth o bigflows-pcap e o skype-pcap (d-itg)
[[[[[[[RELEASE]]]]]]]]]]
>>>>>>>>>>>>>>>>>>>>>
- Implementar para o Iperf
- Rodar em veth o bigflows-pcap e o skype-pcap (iperf)
- Implementar para o Ostinato (provavelmente vou precisar implementar o Componente em Python)
- Rodar em veth o bigflows-pcap e o skype-pcap (Ostinato)
[[[[[[[RELEASE]]]]]]]]]]
>>>>>>>>>>>>>>>>>>>>>
- Terminar de implementar o sniffer em python
- Atualizar o DatabaseInterface
- Procurar soluções mais rapidas para o sniffer (libtins, dpdk)
- implementar o sniffer nessa solução, em C++
- Testar tudo junto
- Atualizar documentação
[[[[[[[RELEASE]]]]]]]]]]
- Implementar o gerador de packetes usando o MoonGen
[[[[[[[RELEASE]]]]]]]]]]
>>>>>>>>>>>>>>>>>>>>>

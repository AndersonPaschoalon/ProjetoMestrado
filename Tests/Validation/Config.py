################################################################################
# Configuration file for setting options and parameters for running the
# SIMITAR validations tests, including:
# * Wavelet multiresolution analyzis and Hurst exponent
# * Flows/packets/Mbits per second
# To run evaluation scripts and generate the data, run:
# ./run.py
# To plot or replot the data, run
# ./plot.py
################################################################################

from Utils.XmlFirst import XmlFirst

configxml = XmlFirst("config.xml")
class Config:
    # directory where the pcap files are placed (all pcaps must be in the same directory)
    pcaps_dir = configxml.getText("pcaps_dir")
    # name of the directory where the plots and data will be saved
    plots_dir = configxml.getText("plots_dir")
    #  file name of the original pcap file
    pcap_file_1 = configxml.getText("pcap_file_1")
    # name of the original pcap file that will be used on the plots
    pcap_name_1 = configxml.getText("pcap_name_1")
    # the prefix of the synthetic pcap files generated by the sumulations. The format of the actual
    # name is pcap_file_2_prefix+i+".pcap". To get the actual pcap file, use Config.pcap_file_2(i).
    pcap_file_2_prefix = configxml.getText("pcap_file_2_prefix")
    pcap_name_2_prefix = configxml.getText("pcap_name_2_prefix")
    # number of synthetic pcap files generated by simulation
    n_runs = int(configxml.getText("n_runs"))
    # analyzis name. this name will name the directory where the plots will be saved. Sugestion: fruit name :P
    analysis_name = configxml.getText("analysis_name")
    # pcap1 name that will be used as legend on the plot
    pcap1_type = configxml.getText("pcap1_type")
    # pcap2 name that will be used as legend on the plot
    pcap2_type = configxml.getText("pcap2_type")
    # just some information that will be recorded on the file about.log
    comments = configxml.getText("comments")

    ############################################################################
    # do not change
    ############################################################################
    # returns the path+name of the original pcap file
    @staticmethod
    def pcap1():
        return Config.pcaps_dir + Config.pcap_file_1

    # returns the path_name of n-th synthetic pcap file
    @staticmethod
    def pcap2(i):
        return Config.pcaps_dir + Config.pcap_file_2_prefix + str(i) + '.pcap'

    # returns the name to be used for the n-th pcap
    @staticmethod
    def pcap_name_2(i):
        return Config.pcap_name_2_prefix + str(i)

    # returns the pcap file name for the n-th pcap
    @staticmethod
    def pcap_file_2(i):
        return Config.pcap_file_2_prefix + str(i) + '.pcap'

    # analysis-pkt-filter.py csv file name
    @staticmethod
    def pktfilter_out_file(pcap_file_name):
        return 'packetsinfo_' + pcap_file_name + '.csv'


#!/usr/bin/octave-cli -qf
% analysis-flow.m
%
% Licensing:
%
%       This code is distributed under the GNU LGPL license.
%
% Modified:
%
%       26 March 2017
%
% Author:
%
%       Anderson Paschoalon
%
% Command line args:
%
%	arg1: data file 1
%	arg2: data file 2
%	arg3: granularity
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Initialization and load data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%inicialization
arg_list = argv ();
close all; clc; clf;
graphics_toolkit ('gnuplot');
pkg load statistics;
set(0, 'DefaultLineLineWidth', 4);
set(0,'defaulttextfontsize', 14);
set(0,'DefaultAxesFontSize',12)
set(0,'DefaultAxesFontName', 'Times New Roman')
DATA_FILE1 = arg_list{1};
DATA_FILE2 = arg_list{2};
GRANULARITY = str2num(arg_list{3});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Constants
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% gnuplot data extension
PLOT_DATA_EXT = '.dat';

% path and datafile prefix. file generated by pcap-sniffer.py
DATA_DIR = './data/';

%  file extension
DATAFILE_NAME_EXT = '.txt';

% path+file with packet data to be loaded
SIMULATION_DATA1 = strcat(DATA_DIR, DATA_FILE1);
SIMULATION_DATA2 = strcat(DATA_DIR, DATA_FILE2);

% load basic data 
TraceData1 = dlmread(SIMULATION_DATA1, ' ' , 2, 0);
TraceData2 = dlmread(SIMULATION_DATA2, ' ' , 2, 0);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Flow data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
vetDepertureTimes1 = TraceData1(:, 5);
vetFlow1 = TraceData1(:, 2);
vetDepertureTimes2 = TraceData2(:, 5);
vetFlow2 = TraceData2(:, 2);
sample_size = GRANULARITY;



[timeVector1 nFlows1 flowCdf1 cumulative1 maxflows1] = calc_flow(vetDepertureTimes1, vetFlow1, sample_size);
[timeVector2 nFlows2 flowCdf2 cumulative2 maxflows2] = calc_flow(vetDepertureTimes2, vetFlow2, sample_size);


m1 = min(timeVector1(end), timeVector2(end));
m2 = max(timeVector1(end), timeVector2(end));

timeVector1 = regularizeVet(timeVector1, m1);
nFlows1 = regularizeVet(nFlows1, m1);
nFlows2 = regularizeVet(nFlows2, m1);

flowCdf1 = regularizeVet(flowCdf1, m2);
flowCdf2 = regularizeVet(flowCdf2, m2);
cumulative1 = regularizeVet(cumulative1, m2);
cumulative2 = regularizeVet(cumulative2, m2);
timeVector2 = regularizeVet(timeVector2, m2);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Save data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Flow_Ps = [timeVector1 nFlows1 nFlows2];
title = 'FlowsPs';
labels = 'time(x)(seconds) n.flows1 n.flows2';
filename = strcat(DATA_DIR, title, PLOT_DATA_EXT);
matrix2File(Flow_Ps, filename, title, labels);

Flow_CDF = [timeVector2 flowCdf1 flowCdf2];
title = 'FlowCdf';
labels = 'time(x)(seconds) flowsCDF1 flowsCDF2';
filename = strcat(DATA_DIR, title, PLOT_DATA_EXT);
matrix2File(Flow_CDF, filename, title, labels);

Flow_cumulative = [timeVector2 cumulative1 cumulative2];
title = 'FlowCumulative';
labels = 'time(x)(seconds) flows_cumulative1 flows_cumulative2';
filename = strcat(DATA_DIR, title, PLOT_DATA_EXT);
matrix2File(Flow_cumulative, filename, title, labels);

Flow_maxflows = [maxflows1 maxflows2];
title = 'FlowMaxflows';
labels = 'flows_maxflows1 flows_maxflows2';
filename = strcat(DATA_DIR, title, PLOT_DATA_EXT);
matrix2File(Flow_maxflows, filename, title, labels);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Plot
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clf;
hold on;
grid on;
plot1 = plot(timeVector1, vetFlow1, '-r');
plot2 = plot(timeVector1, vetFlow2, '-b');
set(gca, 'fontsize', 20);
set(gca,'Fontname','Timesnewroman');
xlabel('time (seconds)'); 
ylabel('Number of flows');
figure_name = strcat('figures/', 'FlowPs', '.png' );
saveas(gca, figure_name);
hold off;
grid off;

clf;
hold on;
grid on;
plot1 = plot(timeVector2, flowCdf1, '-r');
plot2 = plot(timeVector2, flowCdf2, '-b');
set(gca, 'fontsize', 20);
set(gca,'Fontname','Timesnewroman');
xlabel('time (seconds)'); 
ylabel('flows CDF');
figure_name = strcat('figures/', 'FlowCDF', '.png' );
saveas(gca, figure_name);
hold off;
grid off;



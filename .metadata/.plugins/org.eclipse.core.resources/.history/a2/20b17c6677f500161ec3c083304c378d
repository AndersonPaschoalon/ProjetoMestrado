/*
 * StochasticModelFit.h
 *
 *  Created on: 6 de nov de 2016
 *      Author: apaschoalon
 */

#ifndef STOCHASTICMODELFIT_H_
#define STOCHASTICMODELFIT_H_

#include <string>
#include <iostream>
using std::string;
using std::cout;
using std::cerr;
using std::clog;
using std::cin;
using std::endl;

/**
 * This struct must only be generated by the method DataProcessor::fitModels()
 */

class StochasticModelFit
{
public:
	//Constructor
	StochasticModelFit()
	{
		aic = 0;
		bic = 0;
		modelName = "";
		param1 = 0;
		param2 = 0;
		size = 0;
	}

	//Destructor
	~StochasticModelFit()
	{
		//Nothing to do
	}

	string toString(void)
	{
		string strRepresentation = "Model Name: " + modelName + " param1:"
				+ param1 + " param2:" + param2 + " bic:" + bic + " aic:" + aic
				+ " size:" + size;
		return(strRepresentation);
	}

	//copy operator
	const StochasticModelFit& operator=(const StochasticModelFit& rhs)
	{
		if (&rhs != this)
		{
			aic = rhs.aic;
			bic = rhs.bic;
			modelName = rhs.modelName;
			param1 = rhs.param1;
			param2 = rhs.param2;
			size = rhs.size;
		}
		else
		{
			cerr << "Error @  StochasticModelFit::operator=():"
					<< "Attempted assignment of a StochasticModelFit object to itself"
					<< endl;
			cerr << "Hint: StochasticModelFit = " << toString();
		}

		return (*this);
	}

	void print(void)
	{
		cout << "Model Name:" << modelName << " param1:" << param1 << " param2:"
				<< param2; // << endl;
		cout << "\tbic:" << bic << " aic:" << aic << " size:" << size << endl;
	}



	//AIC criterion value for the model
	double aic;

	//BIC criterion value for the model
	double bic;

	//String with a human-readable name of the current model
	string modelName;

	//first parameter (in alphabetical order) of the model
	double param1;

	//second parameter (in alphabetical order) of the model
	double param2;

	//Number of models setted by the method DataProcessor::fitModels()
	unsigned int size;

private:
};

/*
 typedef struct stochastic_model_fitting
 {
 //AIC criterion value for the model
 double aic;

 //BIC criterion value for the model
 double bic;

 //String with a human-readable name of the current model
 char modelName[50];

 //first parameter (in alphabetical order) of the model
 double param1;

 //second parameter (in alphabetical order) of the model
 double param2;

 //Number of models setted by the method DataProcessor::fitModels()
 unsigned int size;

 } StochasticModelFit;
 */

int compareBic(const void* a, const void* b);
int compareAic(const void* a, const void* b);

#endif /* STOCHASTICMODELFIT_H_ */
